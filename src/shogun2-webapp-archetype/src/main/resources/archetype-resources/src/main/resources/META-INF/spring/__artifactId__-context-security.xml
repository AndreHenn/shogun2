#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Enables Method Security and Expression-based access control -->
    <security:global-method-security pre-post-annotations="enabled">
        <!-- Enables custom expression handler -->
        <security:expression-handler ref="methodExpressionHandler" />
    </security:global-method-security>

    <!-- Custom Authentication Provider -->
    <bean id="shogun2AuthenticationProvider" class="de.terrestris.shogun2.security.Shogun2AuthenticationProvider" />

    <security:authentication-manager alias="authenticationManager" >
        <security:authentication-provider ref="shogun2AuthenticationProvider" />
    </security:authentication-manager>

    <!-- Web/URL security -->
    <security:http auto-config="true" use-expressions="true" access-decision-manager-ref="accessDecisionManager">
        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />

        <!-- As CSRF protection is enabled by default in Spring Security 4,
             the logout-url will only work with POST requests. To work with
             GET requests CSRF has to be disabled -->
        <!-- <security:csrf disabled="true"/> -->
        <security:logout logout-url="/logout" />
    </security:http>

    <!-- This bean is referenced by the http security config to assure that the role hierarchy will be used -->
    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg>
            <bean id="webExpressionVoter" class="org.springframework.security.web.access.expression.WebExpressionVoter">
                <property name = "expressionHandler">
                    <bean id="webExpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
                        <property name = "roleHierarchy" ref="roleHierarchy" />
                    </bean>
                </property>
            </bean>
        </constructor-arg>
    </bean>

    <!-- See http://goo.gl/o42k1S -->
    <bean id="methodExpressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
    <!-- To use hasPermission() in expressions, configure a PermissionEvaluator -->
         <property name = "permissionEvaluator" ref="permissionEvaluator" />
         <property name = "roleHierarchy" ref="roleHierarchy"/>
    </bean>

    <!-- http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/access/hierarchicalroles/RoleHierarchyImpl.html -->
    <bean id="roleHierarchy"  class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <property name="hierarchy">
            <value>
                ROLE_ADMIN > ROLE_USER
            </value>
        </property>
    </bean>

</beans>
